\documentclass[12pt]{extarticle}
\usepackage{amsmath}
\usepackage[russian]{babel}
\usepackage[left=15mm,right=15mm,top=20mm,bottom=20mm]{geometry}
\begin{document}
Здесь и далее $A_{max}$ - допустимая погрешность метода, т.е. количество брошенных вызовов к отвеченным,
$s$ - вероятность того, что клиент ответит на звонок.

Модель метода Berlang. Пусть $\lambda$ - интенсивность Пуассоновского процесса, представляющего
исходящие вызовы, $T_s$ - средняя длина разговора. Тогда нагрузка Эрланга $\rho = \lambda T_s$.
Для $f$ операторов по B-формуле эрланга можно вычислить вероятность брошенного вызова $A=B(f, \rho)$.
Исходя из этого строится алгоритм.

Дано: $f$ - количество операторов, $A_{max}$, на основе статистики по нескольким последним вызовам:
$T_s$, $s$
\begin{enumerate}
    \item Вычисляем максимальное $\rho_{max} : B(f, \rho) \leq A_{max}$
    \item Полученную нагрузку Эрланга делим на $s$, чтобы получить нагрузку с учетом
        того, что не все клиенты ответят на звонок. Получаем: $\dfrac{\rho_{max}}{s}$
    \item Полученную нагрузку делим на среднее время разговора, чтобы получить интенсивность:
        $$\lambda = \dfrac{\rho_{max}}{T_s s}$$
    Данная интенсивность является результатом алгоритма
\end{enumerate}

Модель метода Grin. Пусть $a_1, a_2, ... , a_n$ - текущие длины разговоров с операторами: $n \leq f$. .
$b_1, b_2, ... , b_m$ - текущие длины звонков, у которых клиент еще не поднял трубку.
На основе статистики последних звонков, можно подсчитать с какой вероятностью через время t
завершится разговор, который уже длился $a_i$, как условную вероятность $$P(x < t + a_i | x > a_i)$$,
где $x$ - с.в. длина разговора, имеющая распределение в соответствии со
статискиой последних вызовов.
Аналогично можно подсчитать с какой вероятностью через время t клиент поднимет трубку, если
его ожидание длилось $b_i$. В соответствии с этим для фиксированного $t$
можно посчитать $a'_1, a'_2, ... , a'_n$ -
вероятности, что звонок соответвующей длины завершится через время $t$. Аналогично считаются
$b'_1, b'_2, ... , b'_m$, вероятности, что звонок соответствующей длины ожидания,
будет отвечен через время $t$.
Эти вероятности можно использовать в Биномиальном Пуассоновском распределении. Это распределение
количества успехов в независимых, но неравнораспределенных Бернуллевских испытаниях.
Тоесть для времени $t$: $$a \sim BinPoi(a'_1, a'_2, ... , a'_n)$$ - распределение количества
завершившихся звонков через время $t$. Аналогично $$b \sim BinPoi(b'_1, b'_2, ... , b'_m)$$ -
распределение количества отвеченных звонков через время $t$. Таким образом можно построить
неравенство: $b - a \leq f - n$ , тоесть что через время $t$ свободных операторов будет достаточно,
чтобы ответить всем клиентам. Вычислив:
$$a_{max} : P(x >= a_{max}) > 1 - A_{max}, x \sim BinPoi(a'_1, a'_2, ..., a'_n)$$
$$b_{min} : P(x <= b_{min}) > 1 - A_{max}, x \sim BinPoi(b'_1, b'_2, ..., b'_m)$$
получаются оценки значений $a$, $b$ с требуемой вероятностью. Тогда если
$$b_{min} - a_{max} \leq f - n - 1$$ выполняется, то мы можем гарантировать, что через время $t$
не произойдет брошенного вызова с требуемой вероятностью и будет свободный оператор. Взяв вместо
$b_{min}$ величину $$b'_{min} : P(b'_{min} <= k) > q - A_{max}, x \sim Bin(b_{min}, s)$$
мы учтем, что не на все вызовы ответит клиент. Итоговое выражение:
$$b'_{min} - a_{max} \leq f - n$$
Если оно выполняется для всех $t$ - то брошенного вызова не случится вообще с требуемой вероятностью и есть свободный оператор.
Так как используется пересечение трех независимых(в модели) событий, то вместо $1 - A_{max}$
надо брать как кубический корень из этого выражения. Программной реализации требуется проверить
выполнимость итогового неравенства в необходимом количестве точек $t$. Когда оно выполняется
в необходимом количестве точек можно делать новый звонок.


\end{document}
